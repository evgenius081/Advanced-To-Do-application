// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TODOListDomainModel.Context;

namespace TODOListDomainModel.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230524150427_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TODOListDomainModel.Classes.ToDoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<bool>("Remind")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ToDoListID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ToDoListID");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 23, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(4791),
                            Deadline = new DateTime(2023, 5, 26, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(5198),
                            Description = "Milk, bread, eggs, cheese",
                            Priority = 2,
                            Remind = true,
                            Status = 0,
                            Title = "Buy groceries",
                            ToDoListID = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 5, 21, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6486),
                            Deadline = new DateTime(2023, 5, 25, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6497),
                            Description = "Write up the findings from the experiments",
                            Priority = 0,
                            Remind = false,
                            Status = 1,
                            Title = "Finish project report",
                            ToDoListID = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 5, 17, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6541),
                            Deadline = new DateTime(2023, 5, 22, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6542),
                            Description = "Run for 30 minutes around the park",
                            Priority = 1,
                            Remind = false,
                            Status = 2,
                            Title = "Go for a run",
                            ToDoListID = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 5, 22, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6544),
                            Deadline = new DateTime(2023, 5, 27, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6545),
                            Description = "Check in with her and see how she's doing",
                            Priority = 0,
                            Remind = false,
                            Status = 0,
                            Title = "Call mom",
                            ToDoListID = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 5, 20, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6546),
                            Deadline = new DateTime(2023, 5, 26, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6547),
                            Description = "Complete the coding challenge for the job application",
                            Priority = 0,
                            Remind = false,
                            Status = 1,
                            Title = "Finish coding challenge",
                            ToDoListID = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 5, 22, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6549),
                            Deadline = new DateTime(2023, 5, 25, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6550),
                            Description = "Vacuum the floors and dust the surfaces",
                            Priority = 2,
                            Remind = false,
                            Status = 0,
                            Title = "Clean the house",
                            ToDoListID = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 5, 19, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6551),
                            Deadline = new DateTime(2023, 5, 25, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6552),
                            Description = "Mail the birthday card to your friend",
                            Priority = 0,
                            Remind = true,
                            Status = 2,
                            Title = "Send birthday card",
                            ToDoListID = 3
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 5, 23, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6553),
                            Deadline = new DateTime(2023, 5, 31, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6554),
                            Description = "Make an appointment for a teeth cleaning",
                            Priority = 1,
                            Remind = false,
                            Status = 0,
                            Title = "Schedule dentist appointment",
                            ToDoListID = 3
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 5, 21, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6556),
                            Deadline = new DateTime(2023, 5, 24, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6556),
                            Description = "Submit the expense report for reimbursement",
                            Priority = 2,
                            Remind = false,
                            Status = 1,
                            Title = "Submit expense report",
                            ToDoListID = 2
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 5, 18, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6558),
                            Deadline = new DateTime(2023, 5, 27, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6558),
                            Description = "Read the next chapter in the book club book",
                            Priority = 0,
                            Remind = false,
                            Status = 0,
                            Title = "Read book",
                            ToDoListID = 3
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2023, 5, 23, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6560),
                            Deadline = new DateTime(2023, 5, 24, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6561),
                            Description = "Review the agenda and prepare notes for the meeting",
                            Priority = 0,
                            Remind = true,
                            Status = 1,
                            Title = "Prepare for meeting",
                            ToDoListID = 2
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2023, 5, 19, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6562),
                            Deadline = new DateTime(2023, 5, 26, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6563),
                            Description = "Choose and purchase a gift for the upcoming birthday",
                            Priority = 0,
                            Remind = false,
                            Status = 0,
                            Title = "Buy birthday gift",
                            ToDoListID = 3
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2023, 5, 23, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6565),
                            Deadline = new DateTime(2023, 5, 25, 15, 4, 27, 528, DateTimeKind.Utc).AddTicks(6565),
                            Description = "Respond to the email from your coworker",
                            Priority = 0,
                            Remind = false,
                            Status = 0,
                            Title = "Reply to email",
                            ToDoListID = 2
                        });
                });

            modelBuilder.Entity("TODOListDomainModel.Classes.ToDoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ToDoLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsArchived = true,
                            Title = "House things"
                        },
                        new
                        {
                            Id = 2,
                            IsArchived = false,
                            Title = "Work tasks"
                        },
                        new
                        {
                            Id = 3,
                            IsArchived = false,
                            Title = "Being adult"
                        });
                });

            modelBuilder.Entity("TODOListDomainModel.Classes.ToDoItem", b =>
                {
                    b.HasOne("TODOListDomainModel.Classes.ToDoList", "TodoList")
                        .WithMany("Items")
                        .HasForeignKey("ToDoListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TodoList");
                });

            modelBuilder.Entity("TODOListDomainModel.Classes.ToDoList", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
